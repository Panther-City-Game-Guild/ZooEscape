name: Build and Deploy
on:
  push:
    tags: ["v*"]

permissions:
  contents: write
env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: ZooEscape
  PROJECT_PATH: zoo-escape

concurrency:
  group: build-and-deploy
  cancel-in-progress: false

jobs:
  export-windows:
   name: Windows Export
   runs-on: ubuntu-latest
   container:
     image: barichello/godot-ci:4.4
   steps:
     - name: Checkout
       uses: actions/checkout@v4
       with:
         lfs: true
     - name: Setup
       run: |
         mkdir -v -p ~/.local/share/godot/export_templates/
         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
     - name: Windows Build
       run: |
         mkdir -v -p build/windows
         cd $PROJECT_PATH
         godot --headless --verbose --export-release "Windows Desktop" ../build/windows/$EXPORT_NAME.exe
     - name: Upload Artifact
       uses: actions/upload-artifact@v4.4.3
       with:
         name: windows
         path: build/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux/X11" ../build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: linux
          path: build/linux

  export-mac:
   name: Mac Export
   runs-on: ubuntu-latest
   container:
     image: barichello/godot-ci:4.4
   steps:
     - name: Checkout
       uses: actions/checkout@v4
       with:
         lfs: true
     - name: Setup
       run: |
         mkdir -v -p ~/.local/share/godot/export_templates/
         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
     - name: Mac Build
       run: |
         mkdir -v -p build/mac
         cd $PROJECT_PATH
         godot --headless --verbose --export-release "Mac OSX" ../build/mac/$EXPORT_NAME.zip
     - name: Upload Artifact
       uses: actions/upload-artifact@v4.4.3
       with:
         name: mac
         path: build/mac
  
  export-web:
   name: Web Export
   runs-on: ubuntu-latest
   container:
     image: barichello/godot-ci:4.4
   steps:
     - name: Checkout
       uses: actions/checkout@v4
       with:
         lfs: true
     - name: Setup
       run: |
         mkdir -v -p ~/.local/share/godot/export_templates/
         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
     - name: Web Build
       run: |
         mkdir -v -p build/web
         cd $PROJECT_PATH
         godot --headless --verbose --export-release "Web" ../build/web/index.html
     - name: Upload Artifact
       uses: actions/upload-artifact@v4.4.3
       with:
         name: web
         path: build/web

  create-release:
    needs: [export-windows, export-linux, export-mac, export-web]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Zip platform builds
        run: |
          zip -r windows-build.zip windows/
          zip -r linux-build.zip linux/
          zip -r mac-build.zip mac/
          zip -r web-build.zip web/
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            *-build.zip
  deploy-itch:
    needs: [create-release]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Install and setup Butler
        run: |
          curl -L -o butler.zip https://broth.itch.zone/butler/linux-amd64/LATEST/archive/default --proto =https
          unzip butler.zip
          chmod +x butler
          ./butler -V
      - name: Push to itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.ITCH_IO_API_KEY }}
        run: |
          ./butler push windows ${{ secrets.ITCH_USERNAME }}/${{ vars.GAME_NAME }}:windows --userversion ${{ github.ref_name }}
          ./butler push linux ${{ secrets.ITCH_USERNAME }}/${{ vars.GAME_NAME }}:linux --userversion ${{ github.ref_name }}
          ./butler push mac ${{ secrets.ITCH_USERNAME }}/${{ vars.GAME_NAME }}:mac --userversion ${{ github.ref_name }}
          ./butler push web ${{ secrets.ITCH_USERNAME }}/${{ vars.GAME_NAME }}:web --userversion ${{ github.ref_name }}